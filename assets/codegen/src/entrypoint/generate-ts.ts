import * as configFilePathImport from "./config-paths";

export const GenerateCommonPlatformResourcesCode = ( allConfigFilePaths: ReadonlyArray<string> ) => `// This file was auto-generated by TS script!

import * as codegen from "../codegen/generation";
import * as api from "../api/configuration";
${allConfigFilePaths.reduce( ( prevString, configFilePath, idx ) => `${prevString}
import * as ${ GetConfigImportName( idx )} from "${GetPathFromConfigFilePath( configFilePath )}";`, "" )}

const logIfNeeded = ( str: string ) => {
  if ( str.length > 0 ) {
    console.log( str );
  }
};

const getArray = ( config: api.InfraConfigurationExport ) => {
  return typeof config === 'function' ? config() : config;
};

[${allConfigFilePaths.reduce( ( prevString, _, idx ) => `${prevString}
...getArray(${GetConfigImportName( idx )}.Configuration),`, "" )}
].forEach( ( config ) => {
  const codeGenResult = codegen.GetTerraformCode( config );

  logIfNeeded( codeGenResult.dataSources );
  logIfNeeded( codeGenResult.resources );
} );
`
export const GetPathFromConfigFilePath = ( name: string ) => `../config/${name}`;

export const GetConfigImportName = ( idx: number ) => `config_${idx}`;

console.log( GenerateCommonPlatformResourcesCode( configFilePathImport.allConfigFilePaths.map( path => path.substr( 0, path.lastIndexOf( '.ts' ) ) ) ) ); // Doing stuff like x.substr(0, x.lastIndexOf) is pain in Bash, so just do it here.
