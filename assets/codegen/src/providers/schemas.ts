export const GenerateTypeScript = ( allPlatformProviders: ReadonlyArray<string> ) => `// This file was auto-generated by TS script!

${allPlatformProviders.reduce( ( prevString, provider ) => `${prevString}
import * as res_${ provider} from "${GetPathFromProviderName( provider, "/inputs" )}";
import * as data_${ provider} from "${GetPathFromProviderName( provider, "/inputs-data" )}";
`, "" )}

export const AllSchemas = {${ allPlatformProviders.reduce( ( prevString, provider ) => `${prevString}
  ...res_${provider}.AllSchemas`, "" )}
} as const;

export const AllDataSources = {${ allPlatformProviders.reduce( ( prevString, provider ) => `${prevString}
  ...data_${provider}.AllSchemas`, "" )}
} as const;
`;

export const GenerateTSConfig = ( allPlatformProviders: ReadonlyArray<string> ) => ( {
  "extends": "../../../../../tsconfig.project.json",
  "include": [
    "./*.ts"
  ],
  "compilerOptions": {
    "composite": true,
    "outDir": "../../../../../ts_out"
  },
  "references": allPlatformProviders.map( ( provider ) => ( { "path": GetPathFromProviderName( provider, "" ) } ) )
} );

const GetPathFromProviderName = ( provider: string, suffix: string ) => `../../../providers/${provider}/schemas${suffix}`;

