import * as collectedPlatformProviders from "../providers";
import * as common from "./common";

export const GenerateCommonPlatformResourcesCode = ( allPlatformProviders: ReadonlyArray<string> ) => `// This file was auto-generated by TS script!

import * as common from "../providers";
${allPlatformProviders.reduce( ( prevString, provider ) => `${prevString}
import * as ${ provider} from "${common.GetPathFromProviderName( provider )}";`, "" )}

export const HandleProviderSpecificSchema = ( resource_type: string, provider_schema: common.TProviderSpecificSchema, value: unknown ) => {
  const provider = resource_type.substring( 0, resource_type.indexOf( "_" ) );
  switch ( provider ) {
${ allPlatformProviders.reduce( ( prevString, provider ) => `${prevString}
    case "${provider}":
      return ${provider}.HandleProviderSpecificSchema( provider_schema, value );`, "" )}
    default:
      throw new Error( "Internal TF codegen error: unrecognized provider " + provider + " from resource " + resource_type + "." );
  }
}
`

console.log( GenerateCommonPlatformResourcesCode( collectedPlatformProviders.allProviders ) );
